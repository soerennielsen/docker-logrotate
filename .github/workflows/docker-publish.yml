name: Docker

on:
  workflow_dispatch:
    inputs:
      publish:
        description: "Publish to registry"
        type: boolean
        required: true
        default: false

  push:
    tags:
      - "v*"

  # Run publish for any PRs to the main branch.
  pull_request:

env:
  IMAGE_NAME: logrotate

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Container Registry.
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.publish)

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Need full history for tags

      - name: Extract version
        id: version
        run: |
          TAG=$(git describe --exact-match --tags HEAD 2>/dev/null || git describe --tags --abbrev=0)
          if [[ $TAG =~ ^v ]]; then
            echo "VERSION=${TAG#v}" >> $GITHUB_OUTPUT
            echo "HAS_TAG=true" >> $GITHUB_OUTPUT
          else
            echo "HAS_TAG=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.ref == 'refs/heads/master' && 'latest' || github.ref_name }}
            ${{ steps.version.outputs.HAS_TAG == 'true' && format('ghcr.io/{0}/{1}:{2}', github.repository_owner, env.IMAGE_NAME, steps.version.outputs.VERSION) || '' }}
